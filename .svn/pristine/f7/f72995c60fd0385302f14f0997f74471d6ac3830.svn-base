package com.mass.biz.smart.merchantScore.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mass.biz.smart.merchantScore.dao.SzMerchantScoreMapper;
import com.mass.biz.smart.merchantScore.model.SzMerchantScore;
import com.mass.biz.smart.merchantScore.service.SzMerchantScoreService;

@Service
public class SzMerchantScoreImpl implements SzMerchantScoreService {

	@Autowired
	private SzMerchantScoreMapper szMerchantScoreMapper;
	
	@Override
	public int insert(SzMerchantScore szMerchantScore) {
		Long last_socre = szMerchantScore.getLast_sore();
		Long score = szMerchantScore.getScore();
		//分数变化
		if(last_socre!=null && score!=null)
			szMerchantScore.setChanges(score - last_socre);
		
		return szMerchantScoreMapper.insert(szMerchantScore);
	}

	@Override
	public int delete(long rid) {
		return szMerchantScoreMapper.delete(rid);
	}

	@Override
	public int update(SzMerchantScore szMerchantScore) {
		return szMerchantScoreMapper.update(szMerchantScore);
	}

	@Override
	public SzMerchantScore getEntityById(long rid) {
		return szMerchantScoreMapper.getEntityById(rid);
	}

	@Override
	public List<SzMerchantScore> selectPageList(SzMerchantScore params, Integer offset, Integer limit) {
		return szMerchantScoreMapper.selectPageList(params, offset, limit);
	}

	@Override
	public Long count(SzMerchantScore szMerchantScore) {
		return szMerchantScoreMapper.count(szMerchantScore);
	}

	@Override
	public List<SzMerchantScore> selectIndexList(SzMerchantScore params, Integer offset, Integer limit) {
		return szMerchantScoreMapper.selectIndexList(params, offset, limit);
	}

	@Override
	public Long indexListCount(SzMerchantScore szMerchantScore) {
		return szMerchantScoreMapper.indexListCount(szMerchantScore);
	}

	@Override
	public Long selectThelastScore(SzMerchantScore szMerchantScore) {
		return szMerchantScoreMapper.selectThelastScore(szMerchantScore);
	}

}
