package generator;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import org.mybatis.generator.api.MyBatisGenerator;
import org.mybatis.generator.config.Configuration;
import org.mybatis.generator.config.xml.ConfigurationParser;
import org.mybatis.generator.internal.DefaultShellCallback;
/**
 * 
 * @ProjectName:  [demo-ht] 
 * @Package:      [generator.GeneratorTest.java]  
 * @ClassName:    [GeneratorTest]   
 * @Description:  [反向生成工具类]   
 * @Author:       [张双喜]   
 * @CreateDate:   [2018年5月27日 下午3:04:41]   
 * @UpdateUser:   [zsx]   
 * @UpdateDate:   [2018年5月27日 下午3:04:41]   
 * @Since         [JDK1.7]
 * @Version:      [v1.0]
 *
 */
public class GeneratorTest {
    public static void main(String[] args)throws Exception {
    	try {
            List<String> warnings = new ArrayList<String>();
            boolean overwrite = true;
            ClassLoader classloader = Thread.currentThread().getContextClassLoader();
            InputStream is = classloader.getResourceAsStream("generatorConfig.xml");
            ConfigurationParser cp = new ConfigurationParser(warnings);
            Configuration config = cp.parseConfiguration(is);
            DefaultShellCallback callback = new DefaultShellCallback(overwrite);
            MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
            myBatisGenerator.generate(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}