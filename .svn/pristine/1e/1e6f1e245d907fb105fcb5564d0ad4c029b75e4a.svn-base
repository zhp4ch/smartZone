package com.mass.biz.smart.sign.controller;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.mass.biz.smart.sign.model.SignUpModel;
import com.mass.biz.smart.sign.service.SignUpService;
import com.mass.core.framework.aop.LogAop;
import com.mass.core.utils.AjaxResponse;

/**
 * 考勤打卡Controller
 * 
 * @author vm3
 * 
 */
@RestController
@RequestMapping("/signUp")
public class SignUpController {

	private final static Logger LOGGER = LoggerFactory
			.getLogger(SignUpController.class);

	@Autowired
	private SignUpService signService;
	
	@Value("${preUrl.pre-path}")
	private String preUrl;

	/**
	 * 考勤list查询
	 * 
	 * @param signModel
	 * @param pageIndex
	 * @param pageSize
	 * @return
	 */
	@RequestMapping(value = "/list")
	@LogAop(menuName = "考勤打卡", operationDesc = "查询", operationType = "3")
	public AjaxResponse list(SignUpModel signModel,
			@RequestParam(value = "page") Integer pageIndex,
			@RequestParam(value = "limit") Integer pageSize) {
		try {
			Long count = signService.count(signModel);
			List<SignUpModel> list = signService.selectPageList(signModel,
					(pageIndex-1)*pageSize, pageSize);
			if(list!=null){
				for(SignUpModel model : list){
					model.setId_image(preUrl + model.getId_image());
				}
			}
			return AjaxResponse.success("ok", list, count, pageIndex);
		} catch (Exception e) {
			e.printStackTrace();
			LOGGER.error("select SignModel error!", e);
			return null;
		}
	}

	@RequestMapping(value = "/userDetail")
	@LogAop(menuName = "考勤打卡", operationDesc = "查询", operationType = "3")
	public AjaxResponse getUserDetail(SignUpModel signModel,
			@RequestParam(value = "page") Integer pageIndex,
			@RequestParam(value = "limit") Integer pageSize) {
		try {
			if (signModel.getTimeBefore() != null
					&& signModel.getTimeAfter() != null) {
				signModel.setTimeBefore(signModel.getTimeBefore().trim());
				signModel.setTimeAfter(signModel.getTimeAfter().trim());
			}
			Long count = signService.detailCount(signModel);
			List<SignUpModel> list = signService.getUserDetail(signModel,
					pageIndex - 1, pageSize);
			return AjaxResponse.success("ok", list, count, pageIndex);
		} catch (Exception e) {
			e.printStackTrace();
			LOGGER.error("getUserDetail error!", e);
			return null;
		}
	}
	
	/**
	 * 按月统计考勤人数
	 * @return
	 */
	@RequestMapping(value = "/selectMonthCount")
	public AjaxResponse selectMonthCount() {
		List<Object> list = signService.selectMonthCount();
		return AjaxResponse.success("ok",list);
	}
	
	/**
	 * 查询本月和上月每天考勤人数
	 * @return
	 */
	@RequestMapping(value = "/selectDayCount")
	public AjaxResponse selectDayCount() {
		Calendar cal = Calendar.getInstance();
		int year = cal.get(Calendar.YEAR);
		int month = cal.get(Calendar.MONTH )+1;
		String date1 = String.valueOf(month).length()==1?year+"-0"+month:year+"-"+month;
		month = month-1;
		String date2 = String.valueOf(month).length()==1?year+"-0"+month:year+"-"+month;
		List<Object> list = new ArrayList<>();
		list.add(signService.selectDayCount(date1));
		list.add(signService.selectDayCount(date2));
		return AjaxResponse.success("ok",list);
	}

	/**
	 * 初始化打卡数据
	 * 定时器
	 * 每天早上7:00执行
	 */
	@Scheduled(cron="0 0 7 ? * *")
	@RequestMapping(value = "/initSignData")
	public void initSignData(){
		signService.initSignData();
	}

}
